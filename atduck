#!/usr/bin/perl
#
# ATduck - Hayes AT-compatible modem emulator
# Copyright (C) 2007-2011 nandhp <nandhp@gmail.com>
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License as
#    published by the Free Software Foundation; either version 2 of
#    the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

use FindBin;
use lib "$FindBin::Bin/lib";
use ATduck::Main;
use Pod::Usage;
use Getopt::Long;
use warnings;
use strict;

my @listenargs = ();
GetOptions("listen=s" => sub { push @listenargs, $_[1] },
           "debug|verbose|D" => sub { $ATduck::Main::debuglevel++ },
           "quiet|q" => sub { $ATduck::Main::debuglevel-- },
           "help|?" => \&usage,
           "version" => \&version) or usage();

usage() if @listenargs + @ARGV == 0;

# Start listeners
foreach my $str ( @listenargs ) {
    my $parsed = ATduck::Main->parse_transport_address($str);
    die "Can't parse transport address $str\n" unless $parsed;
    my $t = $parsed->[0]->new_server($parsed->[1]);
    ATduck::EventLoop->add_listener($t);
}

# Start client connections
foreach my $str ( @ARGV ) {
    my $parsed = ATduck::Main->parse_transport_address($str);
    die "Can't parse transport address $str\n" unless $parsed;
    my $t = $parsed->[0]->new_client($parsed->[1]);
    ATduck::Modem->new($t);
}

# Enter the main event loop
ATduck::Main->debug(1, undef, ATduck::Main->info(3) . ' ready');
ATduck::EventLoop->main();

sub usage {
    my ($full) = @_;
    select(STDERR) unless $full;
    print "Usage: atduck [options] [-l socket [...]] [socket [...]]\n";
    pod2usage(-verbose => 99, -exitstatus => 'NOEXIT', -sections => 'OPTIONS')
        if $full;
    exit($full?0:2);
}
sub version {
    print ATduck::Main->info(4),"\r\n";
    exit(0);
}
